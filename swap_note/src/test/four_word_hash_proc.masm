#! Computs the note inputs commitment for up to 16 inputs
#!
#! Inputs: [INPUTS_4, INPUTS_3, INPUTS_2, INPUTS_1]
#! Outputs: [INPUTS_HASH]
#!
proc.get_note_inputs_commitment

    # Initialize the capacity portion of the hasher state.
    # Absorb the first 8 values into the hasher state.
    swapdw padw movupw.2 movupw.2
    # => [8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0]

    # Execute the RPO permutation.
    hperm
    # => Permuted state [R2, R1, C]

    # Drop the two capacity elements to absorb the 9th element.
    dropw dropw
    # => [R2, R1]

    # Absorb the 9th element and apply padding.
    movupw.2 movupw.2
    # => [0, 0, 0, 0, 0, 0, 0, 9, R2, R1]

    # Execute the RPO permutation.
    hperm
    # => Permuted state [R2, R1, C]

    # Convert the state to the digest.
    exec.native::state_to_digest
    # => [Digest]
end
